name: CBS Automation Test (Mac + Docker)

on:
  workflow_dispatch:

# Permissions for GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: macos-latest
    
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Install Homebrew (needed for Docker installation)
      - name: Install Homebrew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      
      # Install Docker on macOS
      - name: Install Docker
        run: |
          brew install docker
          brew install --cask docker
          mkdir -p ~/.docker
          ln -sfn /opt/homebrew/Cellar/docker/*/bin/docker ~/.docker/docker
          export PATH="/opt/homebrew/bin:$PATH"

      # Start Docker Daemon
      - name: Start Docker
        run: |
          nohup dockerd > /tmp/docker.log 2>&1 & 
          sleep 10  # Give Docker time to start
          docker info

      # Start Selenium Chrome container inside Docker
      - name: Start Selenium Chrome in Docker
        run: |
          docker run -d -p 4444:4444 --shm-size=2g selenium/standalone-chrome:latest
          sleep 10  # Wait for Selenium to initialize

      # Set up Maven
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.9
      
      # Set up JDK 22
      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'oracle'

      # Run Maven tests (with Selenium running in Docker)
      - name: Run Test
        run: |
          export DISPLAY=:99
          mvn test -Dwebdriver.remote.url=http://localhost:4444/wd/hub
        continue-on-error: true

      # Download and install Allure
      - name: Download Allure
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.18.1/allure_2.18.1-1_all.deb
          sudo dpkg -i allure_2.18.1-1_all.deb

      # Generate Allure Report
      - name: Generate Allure Report
        run: |
          allure generate target/allure-results --clean -o build/allure-report

      - name: Check files
        run: |
          pwd
          ls -la

      - name: Upload screenshots as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: ./src/main/resources/application.properties
          retention-days: 15

      # Set up GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: gh-pages
          path: './build/allure-report'

      # Deploy Allure Report to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: gh-pages

      # Send Allure Report via Email
      - name: Send Email with Allure Report
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Allure Test Report - CBS Automation"
          body: |
            Hello,

            The latest Allure Test Report is available at:
            ðŸ”— [CBS Automation Report](https://rahulsaini62.github.io/cbs_automation/)

            Thanks.
          to: ${{ secrets.TO_EMAIL }}
          from: ${{ secrets.EMAIL_USERNAME }}
